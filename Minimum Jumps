//{ Driver Code Starts
// Initial Template for Java

import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t;
        t = Integer.parseInt(br.readLine());
        while (t-- > 0) {
            String line = br.readLine();
            String[] tokens = line.split(" ");

            // Create an ArrayList to store the integers
            ArrayList<Integer> array = new ArrayList<>();

            // Parse the tokens into integers and add to the array
            for (String token : tokens) {
                array.add(Integer.parseInt(token));
            }

            int[] arr = new int[array.size()];
            int idx = 0;
            for (int i : array) arr[idx++] = i;

            System.out.println(new Solution().minJumps(arr));
            // System.out.println("~");
        }
    }
}

// } Driver Code Ends


class Solution {
    static int minJumps(int[] arr) {
        if(arr.length == 1) return 0;

        int totaljumps = 0;
        int destination = arr.length -1;
        int coverage = 0;//tells how far i can go
        int lastjumpindex = 0; // tells that this was the point where i could reach

        for(int i = 0 ; i < arr.length - 1; i++){
            coverage = Math.max(coverage, i + arr[i]);
            if(i == lastjumpindex){ // If we have reached the end of the range for the current number of jumps
                totaljumps++;
                lastjumpindex = coverage;
            
                if(coverage >= destination) return totaljumps;
        }
        }
        
        return totaljumps;
    }
}
