/*********************************************************

 Following is the TreeNode structure:

 class TreeNode {
     int data;
     TreeNode left;
     TreeNode right;
     TreeNode() {
         this.data = 0;
         this.left = null;
         this.right = null;
     }
     TreeNode(int data) {
         this.data = data;
         this.left = null;
         this.right = null;
     }
     TreeNode(int data, TreeNode left, TreeNode right) {
         this.data = data;
         this.left = left;
         this.right = right;
     }
 };
 ********************************************************/

import java.util.*;
public class Solution {
    public static List<List<Integer>> getTreeTraversal(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        result.add(inorder(root));
        result.add(preorder(root));
        result.add(postorder(root));

        return result;
    }

    public static List<Integer> inorder(TreeNode root){
        List<Integer> res = new ArrayList<>();
        if(root == null) return res;
        
        res.addAll(inorder(root.left));
        res.add(root.data);
        res.addAll(inorder(root.right));
        return res;
    }

    public static List<Integer> preorder(TreeNode root){
        List<Integer> res = new ArrayList<>();
        if(root == null) return res;
        res.add(root.data);
        res.addAll(preorder(root.left));
        
        res.addAll(preorder(root.right));
        return res;
    }
    public static List<Integer> postorder(TreeNode root){
        List<Integer> res = new ArrayList<>();
        if(root == null) return res;
        
        res.addAll(postorder(root.left));
        res.addAll(postorder(root.right));
        res.add(root.data);
        return res;
    }
}
